Q.1) Java Android Program to demonstrate login form with validation.

// LoginActivity.java 
import android.os.Bundle; 
import android.widget.Button; 
import android.widget.EditText; 
import android.widget.Toast; 
import androidx.appcompat.app.AppCompatActivity; 
 
public class LoginActivity extends AppCompatActivity { 
    @Override 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState); 
        setContentView(R.layout.activity_login); 
 
        EditText username = findViewById(R.id.username); 
        EditText password = findViewById(R.id.password); 
        Button loginButton = findViewById(R.id.loginButton); 
 
        loginButton.setOnClickListener(v -> { 
            String user = username.getText().toString(); 
            String pass = password.getText().toString(); 
            if (user.equals("admin") && pass.equals("1234")) { 
                Toast.makeText(this, "Login Successful", Toast.LENGTH_SHORT).show(); 
            } else { 
                Toast.makeText(this, "Invalid Login", Toast.LENGTH_SHORT).show(); 
            } 
        }); 
    } 
} 
 
// activity_login.xml 
<?xml version="1.0" encoding="utf-8"?> 
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" 
    android:layout_width="match_parent" 
    android:layout_height="match_parent" 
    android:orientation="vertical" 
    android:padding="20dp"> 
 
    <EditText 
        android:id="@+id/username" 
        android:layout_width="match_parent" 
        android:layout_height="wrap_content" 
        android:hint="Enter Username"/> 
 
    <EditText 
        android:id="@+id/password" 
        android:layout_width="match_parent" 
        android:layout_height="wrap_content" 
        android:hint="Enter Password" 
        android:inputType="textPassword"/> 
 
    <Button 
        android:id="@+id/loginButton" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:text="Login"/> 
</LinearLayout> 

Q.2) Write a program to search a specific location on Google Map.

// GoogleMapsSearchActivity.java 
import android.content.Intent; 
import android.net.Uri; 
import android.os.Bundle; 
import android.widget.Button; 
import android.widget.EditText; 
import androidx.appcompat.app.AppCompatActivity; 
 
public class GoogleMapsSearchActivity extends AppCompatActivity { 
    @Override 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState); 
        setContentView(R.layout.activity_google_maps); 
 
        EditText locationInput = findViewById(R.id.locationInput); 
        Button searchButton = findViewById(R.id.searchButton); 
 
        searchButton.setOnClickListener(v -> { 
            String location = locationInput.getText().toString(); 
            Uri gmmIntentUri = Uri.parse("geo:0,0?q=" + location); 
            Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri); 
            mapIntent.setPackage("com.google.android.apps.maps"); 
            startActivity(mapIntent); 
        }); 
    } 
} 
 
// activity_google_maps.xml 
<?xml version="1.0" encoding="utf-8"?> 
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" 
    android:layout_width="match_parent" 
    android:layout_height="match_parent" 
    android:orientation="vertical" 
    android:padding="20dp"> 
 
    <EditText 
        android:id="@+id/locationInput" 
        android:layout_width="match_parent" 
        android:layout_height="wrap_content" 
        android:hint="Enter location"/> 
 
    <Button 
        android:id="@+id/searchButton" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content" 
        android:text="Search"/> 
</LinearLayout> 
 
